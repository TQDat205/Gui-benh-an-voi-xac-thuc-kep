import hashlib
import random
import smtplib
from email.message import EmailMessage
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes

# ======== T·∫°o m√£ OTP ==========
def generate_otp():
    return str(random.randint(100000, 999999))

# ======== G·ª≠i m√£ OTP qua email (gi·∫£ l·∫≠p) ==========
def send_otp(email, otp):
    print(f"[GI·∫¢ L·∫¨P] G·ª≠i m√£ OTP {otp} ƒë·∫øn email: {email}")
    # Th·ª±c t·∫ø c√≥ th·ªÉ d√πng smtplib ƒë·ªÉ g·ª≠i th·∫≠t

# ======== H√†m m√£ h√≥a AES ==========
def encrypt_data(data, key):
    cipher = AES.new(key, AES.MODE_EAX)
    ciphertext, tag = cipher.encrypt_and_digest(data.encode())
    return cipher.nonce, ciphertext, tag

# ======== H√†m bƒÉm SHA-256 ==========
def hash_data(data):
    return hashlib.sha256(data.encode()).hexdigest()

# ======== Giao di·ªán ch√≠nh ==========
def main():
    # B∆∞·ªõc 1: Nh·∫≠p d·ªØ li·ªáu b·ªánh √°n
    medical_record = input("Nh·∫≠p th√¥ng tin b·ªánh √°n: ")

    # B∆∞·ªõc 2: X√°c th·ª±c OTP
    email = input("Nh·∫≠p email ng∆∞·ªùi g·ª≠i: ")
    otp = generate_otp()
    send_otp(email, otp)

    entered_otp = input("Nh·∫≠p m√£ OTP ƒë√£ nh·∫≠n: ")
    if entered_otp != otp:
        print("‚ùå X√°c th·ª±c th·∫•t b·∫°i. D·ª´ng h·ªá th·ªëng.")
        return

    print("‚úÖ X√°c th·ª±c th√†nh c√¥ng!")

    # B∆∞·ªõc 3: M√£ h√≥a b·ªánh √°n
    key = get_random_bytes(16)  # AES-128
    nonce, ciphertext, tag = encrypt_data(medical_record, key)

    # B∆∞·ªõc 4: BƒÉm ƒë·ªÉ ki·ªÉm tra to√†n v·∫πn
    hash_value = hash_data(medical_record)

    # Gi·∫£ l·∫≠p g·ª≠i d·ªØ li·ªáu
    print("\nüéØ G·ª≠i d·ªØ li·ªáu ƒë·∫øn m√°y ch·ªß:")
    print(f"- D·ªØ li·ªáu m√£ h√≥a: {ciphertext.hex()}")
    print(f"- Nonce: {nonce.hex()}")
    print(f"- Tag: {tag.hex()}")
    print(f"- M√£ bƒÉm SHA-256: {hash_value}")
    print(f"- Kh√≥a AES (ph·∫£i truy·ªÅn an to√†n): {key.hex()}")

if __name__ == "__main__":
    main()
